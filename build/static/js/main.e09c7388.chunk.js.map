{"version":3,"sources":["app.js","index.js"],"names":["Msg","union","initDate","Date","toISOString","init","tracks","date","name","startTrack","endTrack","isJSON","update","msg","model","match","AddTrack","newTrack","Object","objectSpread","concat","toConsumableArray","RemoveTrack","filter","track","SetTrackName","_ref","map","SetStartTrack","SetEndTrack","ToggleJSON","view","dispatch","duration","diff","Math","abs","valueOf","moment","react_default","a","createElement","Fragment","className","onClick","type","value","asHours","toFixed","asMinutes","asSeconds","JSON","stringify","key","title","style","width","onChange","e","target","format","fromNow","href","App","program","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e09c7388.chunk.js","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport { union } from 'tagmeme'\n\nconst Msg = union([\n  'AddTrack',\n  'RemoveTrack',\n  'SetTrackName',\n  'SetStartTrack',\n  'SetEndTrack',\n  'ToggleJSON'\n])\n\nconst initDate = new Date().toISOString()\nconst init = [\n  {\n    tracks: [\n      {\n        date: initDate,\n        name: 'Time track loaded – jew.ski/time-track'\n      }\n    ],\n    startTrack: initDate,\n    endTrack: initDate,\n    isJSON: false\n  }\n]\n\nconst update = (msg, model) => {\n  const newModel = Msg.match(msg, {\n    AddTrack () {\n      const date = new Date().toISOString()\n      const newTrack = { date, name: date }\n      return { ...model, tracks: [newTrack, ...model.tracks] }\n    },\n    RemoveTrack (date) {\n      return {\n        ...model,\n        tracks: model.tracks.filter(track => track.date !== date)\n      }\n    },\n    SetTrackName ({ date, name }) {\n      return {\n        ...model,\n        tracks: model.tracks.map(track =>\n          track.date === date ? { ...track, name } : track\n        )\n      }\n    },\n    SetStartTrack (date) {\n      return { ...model, startTrack: date }\n    },\n    SetEndTrack (date) {\n      return { ...model, endTrack: date }\n    },\n    ToggleJSON () {\n      return { ...model, isJSON: !model.isJSON }\n    }\n  })\n\n  return [newModel]\n}\n\nconst view = (model, dispatch) => {\n  let duration\n  if (model.startTrack && model.endTrack) {\n    const diff = Math.abs(\n      new Date(model.startTrack).valueOf() - new Date(model.endTrack).valueOf()\n    )\n\n    duration = moment.duration(diff)\n  }\n\n  return (\n    <React.Fragment>\n      <div className='container'>\n        <div className='toolbar'>\n          <button onClick={() => dispatch(Msg.AddTrack())}>\n            Record current time\n          </button>\n          <label className='check'>\n            <input\n              type='checkbox'\n              value={model.isJSON}\n              onClick={() => dispatch(Msg.ToggleJSON())}\n            />\n            Toggle JSON\n          </label>\n        </div>\n        {duration && (\n          <div className='duration'>\n            <p>Duration between A and B</p>\n            <table>\n              <tbody>\n                <tr>\n                  <td>Hours</td>\n                  <td>\n                    <code>{duration.asHours().toFixed(5)}</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Minutes</td>\n                  <td>\n                    <code>{duration.asMinutes().toFixed(5)}</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Seconds</td>\n                  <td>\n                    <code>{duration.asSeconds().toFixed(5)}</code>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        )}\n        {model.isJSON ? (\n          <pre>{JSON.stringify(model.tracks, null, 2)}</pre>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>A</th>\n                <th>B</th>\n                <th>Recorded Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {model.tracks.map(track => (\n                <tr key={track.date}>\n                  <td>\n                    <button\n                      title='Set as A time'\n                      onClick={() => dispatch(Msg.SetStartTrack(track.date))}\n                    >\n                      {track.date === model.startTrack ? 'A' : '-'}\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      title='Set as B time'\n                      onClick={() => dispatch(Msg.SetEndTrack(track.date))}\n                    >\n                      {track.date === model.endTrack ? 'B' : '-'}\n                    </button>\n                  </td>\n                  <td style={{ width: '100%' }}>\n                    <div className='time-item'>\n                      <div>\n                        <input\n                          type='text'\n                          value={track.name}\n                          onChange={e =>\n                            dispatch(\n                              Msg.SetTrackName({\n                                date: track.date,\n                                name: e.target.value\n                              })\n                            )\n                          }\n                        />\n                      </div>\n                      <div className='times'>\n                        <p>\n                          <code>\n                            {moment(track.date).format('hh : mm : ss : SSSS')}\n                          </code>\n                        </p>\n                        <p>{moment(track.date).fromNow()}</p>\n                      </div>\n                    </div>\n                  </td>\n                  <td>\n                    <button\n                      title='Remove'\n                      onClick={() => dispatch(Msg.RemoveTrack(track.date))}\n                    >\n                      ✕\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n      <footer>\n        <p>\n          Made by <a href='https://jew.ski'>Chris Andrejewski</a>, view{' '}\n          <a href='https://github.com/andrejewski/time-track'>source code</a>\n        </p>\n      </footer>\n    </React.Fragment>\n  )\n}\n\nexport function makeProgram () {\n  return {\n    init,\n    update,\n    view\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { program } from 'raj-react'\nimport { makeProgram } from './app'\nimport './index.css'\n\nconst App = program(React.Component, makeProgram)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}